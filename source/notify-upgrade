#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/bin/notify-upgrade
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/notify-upgrade
# Started On        - Wed 15 Jan 00:45:46 GMT 2020
# Last Change       - Sun 10 Apr 23:23:43 BST 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Requires that `apt-get` be found in `/usr/bin/`, else fail. This is to be
# expected in most, if not all Debian/Ubuntu-based distributions of Linux.
#
# Dependencies:
#
#  apt (>= 1.2.32)
#  libgtk2-notify-perl (>= 0.05-4build2)
#  perl (>= 5.10)
#------------------------------------------------------------------------------

use feature 'say';
use strict;
use warnings;

no warnings 'uninitialized';

use constant VERSION => '2022-04-10';
use constant PROGRAM => 'notify-upgrade';

sub Usage() {
	print(qq{Usage: ${\PROGRAM} [OPTS]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.

		  Per the provided cron job, the check occurs every hour. An exit
		  status of 2 indicates that there were no package updates found.
	} =~ tr/\t//dr)
}

use constant FILE => '/usr/bin/apt-get';

while (defined($ARGV[0])) {
	if ($ARGV[0] =~ '^(--help|-h)$') {
		Usage(); exit(0)
	} elsif ($ARGV[0] =~ '^(--version|-v)$') {
		say(VERSION); exit(0)
	} else {
		die("Err: Incorrect option(s) specified.\n")
	}

	shift()
}

die("Err: File '${\FILE}' missing or inaccessible.\n")
	unless -f -x FILE;

my (%Stats, $Total);
foreach (`${\FILE} -s dist-upgrade`) {
	next unless /^\d+ to upgrade,/;

	my @Arr = split();

	%Stats = (
		'Category' => {
			'Upgrade' => $Arr[0],
			'Install' => $Arr[3],
			'Remove' => $Arr[7],
			'Skip' => $Arr[11]
		},

		'Total' => $Total
	);

	last()
}

my $Category = $Stats{'Category'};
map({$Total += $_} values(%$Category));

# There are no updates if this is executed.
exit(2) unless $Total;

use Gtk2::Notify '-init', 'Notify-Upgrade';

my $Message = "Detected $Total available package change(s).";
my $Noti = Gtk2::Notify->new("Notify Upgrade $Message");
$Noti->set_urgency('normal');
$Noti->show()
