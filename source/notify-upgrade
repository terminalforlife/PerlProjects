#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/bin/notify-upgrade
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/notify-upgrade
# Started On        - Wed 15 Jan 00:45:46 GMT 2020
# Last Change       - Wed 13 Apr 16:14:33 BST 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Requires that `apt-get` be found in `/usr/bin/`, else fail. This is to be
# expected in most, if not all Debian/Ubuntu-based distributions of Linux.
#
# Dependencies:
#
#  apt (>= 1.2.32)
#  libgtk2-notify-perl (>= 0.05-4build2)
#  perl (>= 5.26.1)
#------------------------------------------------------------------------------

use feature 'say';
use strict;
use warnings;

no warnings 'uninitialized';

use constant VERSION => '2022-04-13';
use constant PROGRAM => 'notify-upgrade';

sub Usage() {
	print(qq{Usage: ${\PROGRAM} [OPTS]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
		  -N, --no-notify          - Do not send any notifications.

		  Per the provided cron job, the check occurs every hour. An exit
		  status of 2 indicates that there were no package updates found.
	} =~ tr/\t//dr)
}

use constant APT_GET_FILE => '/usr/bin/apt-get';

my $NoNotify = 0;

while (defined($ARGV[0])) {
	if ($ARGV[0] =~ '^(--help|-h)$') {
		Usage(); exit(0)
	} elsif ($ARGV[0] =~ '^(--version|-v)$') {
		say(VERSION); exit(0)
	} elsif ($ARGV[0] =~ '^(--no-notify|-N)$') {
		$NoNotify = 1
	} else {
		die("Err: Incorrect option(s) specified.\n")
	}

	shift()
}

die("Err: File '${\APT_GET_FILE}' missing or inaccessible.\n")
	unless -f -x APT_GET_FILE;

my $Total;
foreach (`${\APT_GET_FILE} -s dist-upgrade`) {
	next() unless /^\d+ to upgrade,/;

	$Total += $_ foreach (split())[0,3,7,11];

	last()
}

# There are no updates if this is executed.
if ($Total) {
	say("Detected $Total available package change(s).");

	unless ($NoNotify) {
		use Gtk2::Notify '-init', 'Notify-Upgrade';

		my $Message = "Detected $Total available package change(s).";
		my $Noti = Gtk2::Notify->new("Notify Upgrade $Message");
		$Noti->set_urgency('normal');
		$Noti->show()
	}
} else {
	exit(2)
}
