#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/bin/clean-locales
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/clean-locales
# Started On        - Thu  9 May 21:32:57 BST 2019
# Last Change       - Sun 10 Apr 22:52:59 BST 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Features:
#
# N/A
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   perl (>= 5.26.1)
#   perl-modules-5.26 (>= 5.26.1-6)
#------------------------------------------------------------------------------

use feature 'say';
use strict;
use warnings;
use File::Path 'remove_tree';

use constant PROGRAM => '2022-04-10';
use constant VERSION => 'clean-locales';

my $LocDir = '/usr/share/locale';

sub Usage() {
	print(qq{Usage: ${\PROGRAM} [OPTS]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
		  -d, --dir [PATH]         - Override default working path.

		  Non-English locales in '$LocDir' will be deleted.

		  Specifially, files ignored are:

		    en_*
		    locale.alias
	} =~ tr/\t//dr)
}

while (defined($ARGV[0])) {
	if ($ARGV[0] =~ '^(--help|-h)$') {
		Usage(); exit(0)
	} elsif ($ARGV[0] =~ '^(--version|-v)$') {
		say(VERSION); exit(0)
	} elsif ($ARGV[0] =~ '^(--dir|-d)$') {
		shift(); $LocDir = $ARGV[0]
	} else {
		die("Err: Incorrect argument(s) specified.\n")
	}

	shift()
}

die("Err: Root access is required.\n") unless $< == 0;
die("Err: Directory '$LocDir' doesn't exist.\n") unless -d $LocDir;

my $ErrCount = 0;

# $_[0] = The directory or file to process.
sub DelIt($) {
	sub ErrUpCount($) {
		print($_[0]);
		$ErrCount++
	}

	if (-d $_[0]) {
		ErrUpCount("$_[0]  [!]\n") unless remove_tree($_[0], {safe => 1})
	} elsif (-f $_[0]) {
		ErrUpCount("$_[0]  [!]\n") unless unlink($_[0])
	} else {
		ErrUpCount("$_[0]  [?]\n")
	}
}

foreach (glob("$LocDir/*")) {
	DelIt($_) unless /^$LocDir\/(en_.*|locale\.alias)$/
}

exit(1) if $ErrCount
