#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/bin/clean-locales
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/clean-locales
# Started On        - Thu  9 May 21:32:57 BST 2019
# Last Change       - Wed 17 Feb 01:58:21 GMT 2021
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Features:
#
# N/A
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   perl (>= 5.26.1)
#   perl-modules-5.26 (>= 5.26.1-6)
#------------------------------------------------------------------------------

require File::Path;

use v5.26.1;
use strict;
use warnings;
use autodie;
use File::Path 'remove_tree';

my $CurVer = "2021-02-17";
my $Progrm = 'clean-locales';

my $LocDir = '/usr/share/locale';

sub Usage {
	print(qq{Usage: $Progrm [OPTS]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
		  -d, --dir [PATH]         - Override default working path.

		  Non-English locales in '$LocDir' will be deleted.

		  Specifially, files ignored are:

		    en_*
		    locale.alias
	} =~ tr/\t//dr)
}

while (defined($ARGV[0])) {
	if ($ARGV[0] =~ '^(--help|-h|-\?)$') {
		Usage(); exit(0)
	} elsif ($ARGV[0] =~ '^(--version|-v)$') {
		print("$CurVer\n"); exit(0)
	} elsif ($ARGV[0] =~ '^(--dir|-d)$') {
		shift(); $LocDir = $ARGV[0]
	} else {
		die("Incorrect argument(s) specified")
	}

	shift()
}

die('Root access is required') unless $< == 0;
die("Directory '$LocDir' doesn't exist") unless -d $LocDir;

my $ErrCount = 0;

# $_[0] = The directory or file to process.
sub DelIt {
	sub ErrUpCount {
		print($_[0]);
		$ErrCount++
	}

	if (-d $_[0]) {
		remove_tree($_[0], {safe => 1}) or ErrUpCount("$_[0]  [!]\n")
	} elsif (-f $_[0]) {
		unlink($_[0]) or ErrUpCount("$_[0]  [!]\n")
	} else {
		ErrUpCount("$_[0]  [?]\n")
	}
}

foreach (glob("$LocDir/*")) {
	/^$LocDir\/(en_.*|locale\.alias)$/ or DelIt($_)
}

$ErrCount > 0 and exit(1)
