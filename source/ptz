#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/bin/ptz
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/ptz
# Started On        - Sat 18 May 21:21:35 BST 2019
# Last Change       - Fri 28 Jan 01:48:49 GMT 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Limited functionality compared to the shell version of ToZero.
#
# Features:
#
# N/A
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   perl (>= 5.22.1-9)
#------------------------------------------------------------------------------

require Time::Piece;

use v5.22.1;
use strict;
use warnings;
use Time::Piece;

my $CurVer = '2022-01-28';
my $Progrm = 'ptz';

sub Usage {
	print(qq{Usage: $Progrm [OPTS] [YYYY-MM-DD]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
		  -C, --no-commas          - Omit commas from returned value.
	} =~ tr/\t//dr)
}

my $DoCommas = 1;

while (defined($ARGV[0])) {
	if ($ARGV[0] =~ /^(--help|-h)$/) {
		Usage(); exit 0
	} elsif ($ARGV[0] =~ /^(--version|-v)$/) {
		print("$CurVer\n"); exit 0
	} elsif ($ARGV[0] =~ /^(--no-commas|-C)$/) {
		$DoCommas = 0
	} elsif ($ARGV[0] =~ /^-/) {
		die("Incorrect argument(s) specified")
	} else {
		last
	}

	shift(@ARGV)
}

die("Target date of YYYY-MM-DD is required")
	if scalar(@ARGV) == 0;

my $Target = shift();

#----------------------------------------Begin Gathering and Displaying Seconds

sub Commas($) {
	my $Nr = '';
	my $Count = 0;
	foreach (split('', reverse($_[0]))) {
		$Nr = $_ . $Nr;
		if ($Count++ == 2) {
			$Nr = ',' . $Nr;
			$Count = 0
		}
	}

	my $Len = length($Nr);
	$Nr = substr($Nr, 1, $Len)
		if substr($Nr, 0, 1) eq ',';

	return($Nr)
}

die("Invalid target date") unless $Target =~ /^\d{4}-\d{2}-\d{2}$/a;

my $CurrentTime = localtime->epoch();
my $TargetTime = Time::Piece->strptime($Target, '%Y-%m-%d')->epoch();
my $Seconds = $TargetTime - $CurrentTime;

if ($DoCommas) {
	print(Commas($Seconds) . "\n")
} else {
	print($Seconds . "\n")
}
