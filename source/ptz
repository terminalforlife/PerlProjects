#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/bin/ptz
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/ptz
# Started On        - Sat 18 May 21:21:35 BST 2019
# Last Change       - Wed 10 Mar 21:12:08 GMT 2021
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Limited functionality compared to the shell version of ToZero.
#
# Features:
#
# N/A
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   perl (>= 5.22.1-9)
#------------------------------------------------------------------------------

require Time::Piece;

use v5.22.1;
use strict;
use warnings;
use autodie;
use Time::Piece;

my $CurVer = '2021-03-10';
my $Progrm = 'ptz';

sub Usage {
	print(qq{Usage: $Progrm [OPTS] [YYYY-MM-DD]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
		  -C, --no-commas          - Omit commas from returned value.
	} =~ tr/\t//dr)
}

my $DoCommas = 1;

while (defined($ARGV[0])) {
	if ($ARGV[0] =~ /^(--help|-h|-\?)$/) {
		Usage(); exit 0
	} elsif($ARGV[0] =~ /^(--version|-v)$/) {
		print("$CurVer\n"); exit 0
	} elsif($ARGV[0] =~ /^(--no-commas|-C)$/) {
		$DoCommas = 0
	} elsif($ARGV[0] =~ /^-.*/) {
		die("Incorrect argument(s) specified")
	} else {
		last
	}

	shift(@ARGV)
}

scalar(@ARGV) == 0 and die("Target date of YYYY-MM-DD is required");

my $Target = shift();

sub CommaInt($) {
	my $Int = $_[0];

	my $Number = reverse($Int);
    $Number =~ s/(\d{3})(?=\d)/$1,/ga;
    return(reverse($Number))
}

$Target =~ /^\d{4}-\d{2}-\d{2}$/a or die("Invalid target date");

# Fetch current time, then target time, in seconds since epoch.
my $CurrentTime = localtime->epoch();
my $TargetTime = Time::Piece->strptime($Target, '%Y-%m-%d')->epoch();

if ($DoCommas) {
	print(CommaInt($TargetTime - $CurrentTime) . "\n")
} else {
	print($TargetTime - $CurrentTime . "\n")
}
