#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/local/bin/getip
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/getip
# Started On        - Wed  8 May 14:35:49 BST 2019
# Last Change       - Sat 16 Apr 22:39:08 BST 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Features:
#
# N/A
#
# Bugs:
#
# N/A
#
# Dependencies:
#
#   libnet-address-ip-local-perl (>= 0.1.2-3)
#   libwww-perl (>= 6.15-1)
#   perl (>= 5.26.1)
#------------------------------------------------------------------------------

use feature 'say';
use strict;
use warnings;
use HTTP::Tiny;
use Net::Address::IP::Local;

no warnings 'uninitialized';

use constant VERSION => '2022-04-16';
use constant PROGRAM => 'getip';

sub Usage() {
	print(qq{Usage: ${\PROGRAM} [OPTS]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
		  -I, --ip-only            - Show only the IP address.
		  -e, --external           - Omit internal IP address.
		  -i, --internal           - Omit external IP address.
	} =~ tr/\t//dr)
}

my ($Internal, $External) = (1, 1);
my $IntStr = 'Internal IP: ';
my $ExtStr = 'External IP: ';

my ($IntExtDetected, $InternalArg, $ExternalArg);
while (defined($ARGV[0])) {
	if ($ARGV[0] =~ '^(--help|-h|-\?)$') {
		Usage(); exit(0)
	} elsif ($ARGV[0] =~ '^(--version|-v)$') {
		say(VERSION); exit(0)
	} elsif ($ARGV[0] =~ '^(--internal|-i)$') {
		$InternalArg = $ARGV[0];

		$IntExtDetected++;
		($Internal, $External) = (1, 0)
	} elsif ($ARGV[0] =~ '^(--external|-e)$') {
		$ExternalArg = $ARGV[0];

		$IntExtDetected++;
		($Internal, $External) = (0, 1)
	} elsif ($ARGV[0] =~ '^(--ip-only|-I)$') {
		($IntStr, $ExtStr) = ''
	} else {
		die("Err: Incorrect option(s) specified.\n")
	}

	shift()
}

die("Err: Either '$InternalArg' or '$ExternalArg'.\n")
	if $IntExtDetected == 2;

if ($Internal) {
	my $Data = Net::Address::IP::Local->public();
	if ($Data =~ '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]') {
		say("$IntStr$Data")
	} else {
		die("Err: Invalid internal IP address detected.\n")
	}
}

if ($External) {
	my $Tiny = HTTP::Tiny->new();
	my $Response = $Tiny->get('https://whatismyip.akamai.com');
	if ($Response->{'success'}) {
		my $Data = $Response->{'content'};
		if ($Data =~ '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]') {
			say("$ExtStr$Response->{'content'}")
		} else {
			die("Err: Invalid external IP address detected.\n")
		}
	} else {
		die("Err: Unable to determine external IP address.\n")
	}
}
