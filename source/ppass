#!/usr/bin/env perl
#cito M:755 O:0 G:0 T:/usr/bin/ppass
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/ppass
# Started On        - Wed 20 Jan 13:48:15 GMT 2021
# Last Change       - Mon 11 Apr 01:43:23 BST 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# You must have access to the 'urandom' device in order to use PPass. Ensure
# your kernel provides this feature if you have problems.
#
# Dependencies:
#
#   perl (>= 5.10)
#------------------------------------------------------------------------------

use feature 'say';
use strict;
use warnings;

no warnings 'uninitialized';

use constant VERSION => '2022-04-11';
use constant PROGRAM => 'ppass';

sub Usage() {
	print(qq{Usage: ${\PROGRAM} [OPTS] [INT]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.

		  Where INT is the length of the password consisting of any valid
		  printable character to generate from the 'urandom' device. The
		  default password length is 10.
	} =~ tr/\t//dr)
}

use constant URANDOM => '/dev/urandom';

my $MaxLen = 10;

while (defined($ARGV[0])) {
	if ($ARGV[0] =~ '^(--help|-h)$') {
		Usage(); exit(0)
	} elsif ($ARGV[0] =~ '^(--version|-v)$') {
		say(VERSION); exit(0)
	} elsif ($ARGV[0] =~ '^(--length|-l)$') {
		shift(); $MaxLen = $ARGV[0]
	} elsif ($ARGV[0] =~ '^-') {
		die("Err: Incorrect option(s) specified.\n")
	} else {
		last()
	}

	shift()
}

$MaxLen = $ARGV[0] if length($ARGV[0]);

my $Result;
if (open(my $FH, '<', URANDOM)) {
	while (read($FH, my $Raw, 1, 0)) {
		my $Filtered = $Raw =~ s/[^[:print:]]//gdr;

		next() if $Filtered eq ' ';

		$Result = "$Result$Filtered";
		last() if length($Result) == $MaxLen
	}

	close($FH) or die("$!")
} else {
	die("$!")
}

say($Result)
