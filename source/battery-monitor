#!/usr/bin/env perl
#cito M:600 O:1000 G:1000 T:/usr/bin/battery-monitor
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/battery-monitor
# Started On        - Mon 27 Jan 02:54:42 GMT 2020
# Last Change       - Mon 22 Mar 01:38:24 GMT 2021
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Battery monitoring pseudo-daemon. Acts accordingly if the battery is low.
#
# To make effective use of this script, run it like you would most daemons.
# Have it executed in the background when the user logs in.
#
# This script takes no arguments.
#
# Dependencies:
#
#   libgtk2-notify-perl (>= 0.05-5)
#   perl (>= 5.26.1-6)
#   systemd (>= 237-3)
#   upower (>= 0.99.7-2)
#------------------------------------------------------------------------------

require Gtk2::Notify;

use v5.26.1;
use strict;
use warnings;
use autodie;
use Gtk2::Notify '-init', 'battery_monitor';

no warnings 'uninitialized';

my $LidFile = '/proc/acpi/button/lid/LID0/state';
my $ChassisFile = '/sys/devices/virtual/dmi/id/chassis_type';

sub Notify{
	my $Noti = Gtk2::Notify->new($_[0]);
	$Noti->set_urgency('critical');
	$Noti->show()
}

my @Files;
foreach my $Dir (split(':', $ENV{'PATH'})) {
	-d -r -x "$Dir" or next;

	foreach my $File (glob("$Dir/*")) {
		my $Base = ($File =~ m{(?:.*/)([^/].*)})[0];
		-f -r -x $File and push(@Files, $File);
	}
}

while (){
	my $MissingDeps = 0;
	foreach my $CurDep ('upower', 'systemctl') {
		unless (grep({$_ eq $CurDep} @Files)) {
			die("Dependency '$CurDep' not met");
			$MissingDeps++
		}
	}

	if (open(my $FH, '<', $ChassisFile)){
		chomp(my $Chassis = <$FH>);
		close($FH);

		$Chassis == 9 or die("Probably not a laptop")
	}elsif (open($FH, '<', $LidFile)){
		chomp(my $Lid = <$FH>);
		close($FH);

		split(' ', $Lid) eq 'open' and die("Detected closed lid")
	}

	my $CurStep;
	foreach (`upower --dump`){
		chomp(my @Arr = split(' ', $_));
		next unless $Arr[0] eq 'percentage:';

		my $PRemains = substr($Arr[1], 0, length($Arr[1]) - 1);

		if ($PRemains < 2){
			Notify("Initiating emergency shutdown in 7s.");
			sleep(7) and system('systemctl poweroff')
		}

		Notify("Battery critical -- shutdown now!") if $PRemains < 3;
		Notify("Battery very low.") if $PRemains < 5;
		Notify("Battery low.") if $PRemains < 10;

		last
	}

	sleep(30)
}
