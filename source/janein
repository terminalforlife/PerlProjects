#!/usr/bin/perl
#cito M:755 O:0 G:0 T:/usr/bin/janein
#------------------------------------------------------------------------------
# Project Name      - PerlProjects/source/janein
# Started On        - Wed 28 Oct 17:26:51 GMT 2020
# Last Change       - Wed 13 Apr 16:52:15 BST 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Programmable Yes/No GTK2 dialog for use in scripts.
#
# Test Results:
#
#   Linux Mint 18.3 (Cinnamon)             | PERFECT
#   Pop! OS 20.04 (GNOME3)                 | BAD
#   Ubuntu 18.04 (i3-wm)                   | PERFECT
#
# Features:
#
#TODO: Add ability to change or supplement title bar.
#TODO: Use a hash for scheme testing/returning.
#TODO: Add error message for too-long a message.
#TODO: Add optional line-wrapping functionality, with correct alignment.
#
# Bugs:
#
#TODO: Handle out-of-range (non-existent) scheme error.
#
# Dependencies:
#
#   libgtk2-perl (>= 2:1.24992-1build1)
#   perl (>= 5.26.1-6)
#------------------------------------------------------------------------------

use feature 'say';
use strict;
use warnings;
use autodie;
use Gtk2 '-init';

no warnings 'uninitialized';

my $Progrm = 'janein';
my $ProgrmFancy = 'JaNein';
my $CurVer = '2022-04-13';

sub Usage {
	print(qq{Usage: $Progrm [OPTS] [QUESTION]

		  -h, --help               - Display this help information.
		  -v, --version            - Output the version datestamp.
		  -N, --no-cmd [CMD]       - Run shell CMD when result is False.
		  -S, --scheme [INT]       - See below for valid button schemes.
		  -Y, --yes-cmd [CMD]      - Run shell CMD when result is True.
		  -f, --frame              - Display a frame around the widgets.

		  The use of '--' is supported in $ProgrmFancy.

		Button Schemes:

		  0: '_Yes' & '_No'               1: '_Accept' & '_Decline'
		  2: '_Agree' & '_Disagree'       3: '_Allow' & '_Deny'
		  4: '_True' & '_False'           5: '_Correct' & '_Incorrect'

		  The underscore ('_') denotes the mnemonic.
	} =~ tr/\t//dr);
}

my $Hush = 0;
my $DoFrame = 0;
my $Scheme = 0;

my ($YesText, $NoText, $YesCMD, $NoCMD, @ButtonSize);

while ( defined($ARGV[0]) ) {
	if ($ARGV[0] eq '--') {
		shift(); last()
	} elsif ($ARGV[0] =~ '^(--help|-h)$') {
		Usage(); exit(0)
	} elsif ($ARGV[0] =~ '^(--version|-v)$') {
		say($CurVer); exit(0)
	} elsif ($ARGV[0] =~ '^(--no-cmd|-N)$') {
		shift(); $NoCMD = $ARGV[0];

		die('Negative command required') unless length($NoCMD) > 0
	} elsif ($ARGV[0] =~ '^(--scheme|-S)$') {
		shift(); $Scheme = $ARGV[0];

		die("Scheme '$Scheme' not an integer") unless $Scheme =~ /^[0-9]{1}$/
	} elsif ($ARGV[0] =~ '^(--yes-cmd|-Y)$') {
		shift(); $YesCMD = $ARGV[0];

		die('Affirmative command required') unless length($YesCMD) > 0
	} elsif ($ARGV[0] =~ '^(--frame|-f)$') {
		$DoFrame = 1
	} elsif ($ARGV[0] =~ '^-') {
		die("Err: Option '$ARGV[0]' invalid.\n")
	} else {
		last()
	}

	shift()
}

# Remaining arguments (not options -- duh) become the question; `echo` style.
my $Question = join(' ', @ARGV);

die("Err: Question string missing.\n")
	unless defined($Question);

die("Err: Question string exceeds maximum length.\n")
	if length($Question) > 100;

sub Clicked($;$) {
	Gtk2::main_quit();

	if (defined($_[0])) {
		system($YesCMD)
	} else {
		system($NoCMD)
	}

	exit($_[1])
}

sub NewButton(\@;$) {
	my $Button = Gtk2::Button->new($_[1]);
	$Button->set_size_request(@{$_[0]});
	$Button->signal_connect('clicked' => \&Clicked, 0);

	return($Button)
}

my $RootWin = Gtk2::Window->new();
$RootWin->set_title($ProgrmFancy);
$RootWin->set_default_size(280, 120);
$RootWin->set_resizable(0);
$RootWin->set_decorated(1);
$RootWin->set_border_width(10);

$RootWin->signal_connect('destroy' => sub {Gtk2::main_quit()});
$RootWin->signal_connect('delete_event' => sub {return(0)});

my $VBox = Gtk2::VBox->new(0, 4);
$VBox->set_border_width(8);

# Putting HBoxButtons within HBoxMain to keep buttons centered sans stretching.
# Ensures minimum size is maintained, else buttons would be cropped.
my $HBoxMain = Gtk2::HBox->new(0, 4);
$HBoxMain->set_size_request(280, 46);

my $HBoxButtons = Gtk2::HBox->new(0, 4);
$HBoxButtons->set_border_width(8);

my $Frame = Gtk2::Frame->new();
$Frame->set_border_width(20);

my $Label = Gtk2::Label->new();
$Label->set_text($Question);
$Label->set_max_width_chars(100);
$Label->set_justify('center');
$Label->set_line_wrap(0);
$Label->set_line_wrap_mode('word');

unless ($Scheme) {
	($YesText, $NoText, @ButtonSize) = ('_Yes', '_No', (100, 60))
} elsif ($Scheme == 1) {
	($YesText, $NoText, @ButtonSize) = ('_Accept', '_Decline', (120, 60))
} elsif ($Scheme == 2) {
	($YesText, $NoText, @ButtonSize) = ('_Agree', '_Disagree', (120, 60))
} elsif ($Scheme == 3) {
	($YesText, $NoText, @ButtonSize) = ('_Allow', '_Deny', (110, 60))
} elsif ($Scheme == 4) {
	($YesText, $NoText, @ButtonSize) = ('_True', '_False', (120, 60))
} elsif ($Scheme == 5) {
	($YesText, $NoText, @ButtonSize) = ('_Correct', '_Incorrect', (120, 60))
}

my $JaButton = NewButton(@ButtonSize, $YesText);
my $NeinButton = NewButton(@ButtonSize, $NoText);

$VBox->pack_start($Label, 1, 1, 4);
$VBox->pack_start($HBoxMain, 0, 0, 4);

$HBoxMain->pack_start($HBoxButtons, 1, 0, 4);

$HBoxButtons->pack_start($JaButton, 1, 1, 4);
$HBoxButtons->pack_start($NeinButton, 1, 1, 4);

if ($DoFrame) {
	$Frame->add($VBox);
	$RootWin->add($Frame);
} else {
	$RootWin->add($VBox);
}

$RootWin->show_all();

Gtk2::main($ProgrmFancy)
